---
# Tasks for testing role

- name: load docker presets
  hosts: localhost
  roles:
    - role: amtega.docker_presets

- name: setup facts with containers sets for dhcpd servers and clients
  hosts: localhost
  tasks:
    - set_fact:
        docker_sandbox_containers_servers: >-
          {{ docker_presets_containers | docker_presets_randomize_names }}
        docker_sandbox_containers_clients: >-
          {{ docker_presets_containers
            | docker_presets_repeat(3)
            | docker_presets_randomize_names }}

- name: setup sandbox for dhdcpd servers
  hosts: localhost
  roles:
    - role: amtega.docker_sandbox
      docker_sandbox_containers: "{{ docker_sandbox_containers_servers }}"
      docker_sandbox_state: started
      docker_sandbox_group: docker_sandbox_containers_servers
      docker_sandbox_idempotence_test: false

- name: setup sandbox for dhdcpd clients
  hosts: localhost
  roles:
    - role: amtega.docker_sandbox
      docker_sandbox_containers: "{{ docker_sandbox_containers_clients }}"
      docker_sandbox_state: started
      docker_sandbox_group: docker_sandbox_containers_clients
      docker_sandbox_cleanup_by_user: false
      docker_sandbox_cleanup_by_ppid: false
      docker_sandbox_idempotence_test: false

- name: setup dhcpd servers config facts
  hosts: docker_sandbox_containers_servers
  tasks:
    - name: setup a fact with dhcpd servers eth0 config
      set_fact:
        eth0_config: >-
          {{ hostvars[inventory_hostname]['ansible_eth0']['ipv4'] }}

    - name: setup dhcpd servers subnets config fact
      set_fact:
        dhcpd_subnet_addresses:
          - subnet: "{{ eth0_config['network'] }}"
            netmask: "{{ eth0_config['netmask'] }}"
            state: present

          - subnet: "192.168.13.0"
            netmask: "255.255.255.0"
            state: present
            routers: "192.168.13.1"
            dns_servers:
             - 192.168.13.2
             - 192.168.13.3
            range_start: 192.168.13.100
            range_end: 192.168.13.120
            default_lease_time: 21600
            max_lease_time: 43200
            next_server: 192.168.13.13
            filename: "pxelinux.0"

          - subnet: "192.168.14.0"
            netmask: "255.255.255.0"
            state: present
            routers: "192.168.14.1"
            dns_servers:
             - 192.168.14.2
             - 192.168.14.3
            range_start: 192.168.14.100
            range_end: 192.168.14.120
            default_lease_time: 21600
            max_lease_time: 43200
            next_server: 192.168.14.13
            filename: "pxelinux.0"

          - subnet: "192.168.15.0"
            netmask: "255.255.255.0"
            state: absent
            routers: "192.168.15.1"
            dns_servers:
             - 192.168.15.2
             - 192.168.15.3
            range_start: 192.168.15.100
            range_end: 192.168.15.120
            default_lease_time: 21600
            max_lease_time: 43200
            next_server: 192.168.15.13
            filename: "pxelinux.0"

    - name: setup dhcpd servers static addresses config fact
      set_fact:
        dhcpd_static_addresses:
         - hostname: hostacme1
           mac: c5:6f:75:cc:00:01
           ipv4_address: 192.168.15.121
           state: present

         - hostname: hostacme2
           mac: c5:6f:75:cc:00:02
           ipv4_address: 192.168.15.122
           state: present

         - hostname: hostacme3
           mac: c5:6f:75:cc:00:03
           ipv4_address: 192.168.15.123
           state: absent

  tags:
    - idempotence

- name: setup dhcpd clients config facts
  hosts: docker_sandbox_containers_clients
  tasks:
    - name: setup dhcpd clients static addresses config fact
      set_fact:
        dhcpd_static_addresses:
         - hostname: hostacme4
           mac: c5:6f:75:cc:00:04
           ipv4_address: 192.168.15.124
           state: present

  tags:
    - idempotence

- name: create some unamanaged files for later dhcpd servers testing
  hosts: docker_sandbox_containers_servers
  tasks:
    - name: create dhcpd servers testing required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items:
        - /etc/dhcp/dhserver.d/dhcpd.subnets.d
        - /etc/dhcp/dhserver.d/dhcpd.static.d

    - name: create dhcpd.subnets.d/test.conf file
      copy:
        content: ""
        dest: "/etc/dhcp/dhserver.d/dhcpd.subnets.d/test.conf"
        force: no

    - name: create dhcpd.static.d/test.conf file
      copy:
         content: ""
         dest: "/etc/dhcp/dhserver.d/dhcpd.static.d/test.conf"
         force: no
  tags:
    - idempotence

- name: create some fake configuration files for later dhcpd servers testing
  hosts: docker_sandbox_containers_servers
  tasks:
    - name: create dhcpd.subnets.d/192.168.15.0.conf file
      copy:
        content: ""
        dest: "/etc/dhcp/dhserver.d/dhcpd.subnets.d/192.168.15.0.conf"
        force: no

    - name: create dhcpd.static.d/hostacme3.conf file
      copy:
        content: ""
        dest: "/etc/dhcp/dhserver.d/dhcpd.static.d/hostacme3.conf"
        force: no

- name: test dhcpd server role with unamanged files deletion disabled
  hosts: docker_sandbox_containers_servers
  roles:
    - role: amtega.dhcpd
      dhcpd_delete_unmanaged: false
  tasks:
    - name: check dhcpd server process is running
      shell: ps aux | grep dhcpd | grep -v grep
      changed_when: false
      register: search_dhcpd_process_result
      failed_when: search_dhcpd_process_result.rc != 0

    - name: check default network config file file
      stat:
        path: >-
          {{ dhcpd_subnets_include_dir
            + "/"
            + hostvars[inventory_hostname]['ansible_eth0']['ipv4']['network']
            + ".conf" }}
      register: check_subnet1_result

    - name: check dhcpd.subnets.d/192.168.13.0.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.subnets.d/192.168.13.0.conf"
      register: check_subnet2_result

    - name: check dhcpd.subnets.d/192.168.14.0.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.subnets.d/192.168.14.0.conf"
      register: check_subnet3_result

    - name: check dhcpd.static.d/hostacme1.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.static.d/hostacme1.conf"
      register: check_static1_result

    - name: check dhcpd.static.d/hostacme2.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.static.d/hostacme2.conf"
      register: check_static2_result

    - name: check absent dhcpd.subnets.d/192.168.15.0.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.subnets.d/192.168.15.0.conf"
      register: check_absent1_result

    - name: check absent dhcpd.static.d/hostacme3.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.static.d/hostacme3.conf"
      register: check_absent2_result

    - name: check unamanged dhcpd.subnets.d/test.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.subnets.d/test.conf"
      register: check_unamanaged1_result

    - name: check unamanged dhcpd.static.d/test.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.static.d/test.conf"
      register: check_unamanaged2_result

    - name: check testing subnets config files exist
      assert:
        that:
          - check_subnet1_result.stat.exists
          - check_subnet2_result.stat.exists
          - check_subnet3_result.stat.exists
          - check_static1_result.stat.exists
          - check_static2_result.stat.exists
          - not check_absent1_result.stat.exists
          - not check_absent2_result.stat.exists
          - check_unamanaged1_result.stat.exists
          - check_unamanaged2_result.stat.exists

    - name: test dhcpd server restart handler
      copy:
        content: ""
        dest: /tmp/emptyfile
        force: no
      notify:
        - dhcpd restart
  tags:
    - idempotence

- name: test dhcpd server unamanged files deletion
  hosts: docker_sandbox_containers_servers
  roles:
    - role: amtega.dhcpd
      dhcpd_delete_unmanaged: true
  tasks:
    - name: check unamanged dhcpd.subnets.d/test.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.subnets.d/test.conf"
      register: check_unamanaged1_result

    - name: check unamanged dhcpd.static.d/test.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.static.d/test.conf"
      register: check_unamanaged2_result

    - name: check testing subnets config files exist
      assert:
        that:
          - not check_unamanaged1_result.stat.exists
          - not check_unamanaged2_result.stat.exists

- name: setup dhcpd servers to test dhcp clients
  hosts: docker_sandbox_containers_servers
  roles:
    - role: amtega.dhcpd
      dhcpd_delete_unmanaged: false

- name: point dhcpd clients config to servers
  hosts: docker_sandbox_containers_clients
  tasks:
    - name: calculate random dhcpd server
      set_fact:
        dhcpd_random_server: >-
          {{ groups['docker_sandbox_containers_servers'] | random }}

    - name: point dhcpd_server fact to random dhcpd server
      set_fact:
        dhcpd_server: >-
          {{ dhcpd_random_server }}

- name: test dhcpd clients
  hosts: docker_sandbox_containers_clients
  roles:
    - role: amtega.dhcpd
  tags:
    - idempotence
  tasks:
    - name: check dhcpd.static.d/hostacme4.conf file
      stat:
        path: "/etc/dhcp/dhserver.d/dhcpd.static.d/hostacme4.conf"
      register: check_client_static_result
      delegate_to: "{{ dhcpd_server }}"

    - name: check testing clients static addresses config files exist
      assert:
        that:
          - check_client_static_result.stat.exists

- name: cleanup docker docker dhcpd servers sandbox
  hosts: localhost
  roles:
    - role: amtega.docker_sandbox
      docker_sandbox_containers: "{{ docker_sandbox_containers_servers }}"
      docker_sandbox_state: absent
      docker_sandbox_cleanup_by_user: false
      docker_sandbox_cleanup_by_ppid: false

- name: cleanup docker docker dhcpd clients sandbox
  hosts: localhost
  roles:
    - role: amtega.docker_sandbox
      docker_sandbox_containers: "{{ docker_sandbox_containers_clients }}"
      docker_sandbox_state: absent
      docker_sandbox_cleanup_by_user: false
      docker_sandbox_cleanup_by_ppid: false
