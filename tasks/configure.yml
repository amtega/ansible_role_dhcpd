---
# Configuration tasks

- block:

  - name: setup a fact with all necessary subnet include config files
    set_fact:
      dhcpd_subnet_include_files: >-
        {{ dhcpd_subnet_addresses
          | selectattr('state', 'equalto', 'present')
          | map(attribute='subnet')
          | map('regex_replace', '^', dhcpd_subnets_include_dir + "/")
          | map('regex_replace', '$', '.conf')
          | list }}

  - name: setup a fact with all necessary static include config files
    set_fact:
      dhcpd_static_include_files: >-
        {{ dhcpd_static_addresses
          | selectattr('state', 'equalto', 'present')
          | map(attribute='hostname')
          | map('regex_replace', '^', dhcpd_static_include_dir + "/")
          | map('regex_replace', '$', '.conf')
          | list }}

  - name: setup a fact with all necessary include files
    set_fact:
      dhcpd_include_files: >-
        {{ dhcpd_static_include_files
          + dhcpd_subnet_include_files }}

  - name: create configuration files for subnets
    template:
      src: subnet.template.j2
      dest: "{{ dhcpd_subnets_include_dir }}/{{ item.subnet }}.conf"
      owner: root
      group: root
      mode: 0644
      backup: no
    when: item.state == 'present'
    with_items: "{{ dhcpd_subnet_addresses }}"
    register: dhcpd_configure_subnets_result
    loop_control:
      label: "{{ item.subnet }} / {{ item.netmask }}"

  - name: remove configuration files for subnets marked as absent
    file:
      path: "{{ dhcpd_subnets_include_dir }}/{{ item.subnet }}.conf"
      state: absent
    when: item.state == 'absent'
    register: dhcpd_remove_absent_subnets_result
    with_items: "{{ dhcpd_subnet_addresses }}"
    loop_control:
      label: "{{ item.subnet}} / {{ item.netmask }}"

  - name: create configuration files for static addresses
    template:
      src: static.template.j2
      dest: "{{ dhcpd_static_include_dir }}/{{ item.hostname }}.conf"
      owner: root
      group: root
      mode: 0644
      backup: no
    when: item.state == 'present'
    with_items: "{{ dhcpd_static_addresses | default([]) }}"
    register: dhcpd_configure_static_result
    loop_control:
      label: "{{ item.hostname }} / {{ item.mac }}"

  - name: remove configuration files for static addresses marked as absent
    file:
      path: "{{ dhcpd_static_include_dir }}/{{ item.hostname }}.conf"
      state: absent
    when: item.state == 'absent'
    with_items: "{{ dhcpd_static_addresses | default([]) }}"
    register: dhcpd_remove_absent_static_result
    loop_control:
      label: "{{ item.hostname}} / {{ item.mac }}"

  - name: search include files that already exists
    find:
      paths: "{{ item }}"
      patterns: "*.conf"
    with_items:
      - "{{ dhcpd_subnets_include_dir }}"
      - "{{ dhcpd_static_include_dir }}"
    register: search_includes_result

  - name: delete unamanged include files
    file:
      path: "{{ item.path }}"
      state: absent
    when:
      - dhcpd_delete_unamanaged
      - item.path not in dhcpd_include_files
    with_items: >-
      {{ search_includes_result.results
        | sum(attribute="files", start=[] )
        | default([]) }}
    register: dhcpd_delete_unamanaged_result
    loop_control:
      label: "{{ item.path }}"

  - block:

      - name: lock dhcpd server
        include: lock_create.yml

    rescue:

      - name: force unlock of dhcpd server
        include: lock_delete.yml

      - name: lock dhcpd server
        include: lock_create.yml

    when: >-
      dhcpd_configure_subnets_result | changed
        or dhcpd_remove_absent_subnets_result | changed
        or dhcpd_configure_static_result | changed
        or dhcpd_remove_absent_static_result | changed
        or dhcpd_delete_unamanaged_result | changed

  - name: create dhcpd main configuration file
    template:
      src: dhcpd.template.j2
      dest: /etc/dhcp/dhcpd.conf
      owner: root
      group: root
      mode: 0644
      backup: no
    when:
      - inventory_hostname == dhcpd_server
      - >-
        dhcpd_configure_subnets_result | changed
          or dhcpd_remove_absent_subnets_result | changed
          or dhcpd_configure_static_result | changed
          or dhcpd_remove_absent_static_result | changed
          or dhcpd_delete_unamanaged_result | changed
    notify:
      - dhcpd restart

  always:

    - name: unlock dhcpd server
      include: lock_delete.yml

  delegate_to: "{{ dhcpd_server}}"
  tags:
    - role::dhcpd
    - role::dhcpd::configure
