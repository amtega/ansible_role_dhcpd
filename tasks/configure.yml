---
# Configuration tasks

- name: Configure dhcpd
  block:
    - name: Setup subnets
      when: not dhcpd_hosts_only | bool
      block:
        - name: Create configuration files for subnets
          ansible.builtin.template:            
            src: subnet.conf.j2
            dest: >-
              {{ dhcpd_subnets_include_dir }}/{{ dhcpd_subnet.subnet }}.conf
            owner: root
            group: root
            mode: 0644
            backup: no
          when: dhcpd_subnet.state == 'present'
          loop: "{{ dhcpd_subnets }}"
          register: dhcpd_configure_subnets_result
          loop_control:
            loop_var: dhcpd_subnet
            label: "{{ dhcpd_subnet.subnet }} / {{ dhcpd_subnet.netmask }}"
          notify:
            - dhcpd restart

        - name: Remove configuration files for subnets marked as absent
          ansible.builtin.file:
            path: >-
              {{ dhcpd_subnets_include_dir }}/{{ dhcpd_subnet.subnet }}.conf
            state: absent
          when: dhcpd_subnet.state == 'absent'
          register: dhcpd_remove_absent_subnets_result
          loop: "{{ dhcpd_subnets }}"
          loop_control:
            loop_var: dhcpd_subnet
            label: "{{ dhcpd_subnet.subnet }} / {{ dhcpd_subnet.netmask }}"
          notify:
            - dhcpd restart

    - name: Create configuration files for hosts
      ansible.builtin.template:
        src: host.conf.j2
        dest: "{{ dhcpd_hosts_include_dir }}/{{ dhcpd_host.hostname }}.conf"
        owner: root
        group: root
        mode: 0644
        backup: no
      when: dhcpd_host.state == 'present'
      loop: "{{ dhcpd_hosts | default([]) }}"
      register: dhcpd_configure_hosts_result
      loop_control:
        loop_var: dhcpd_host
        label: "{{ dhcpd_host.hostname }} / {{ dhcpd_host.mac }}"
      notify:
        - dhcpd restart

    - name: Remove configuration files for hosts marked as absent
      ansible.builtin.file:
        path: "{{ dhcpd_hosts_include_dir }}/{{ dhcpd_host.hostname }}.conf"
        state: absent
      when: dhcpd_host.state == 'absent'
      loop: "{{ dhcpd_hosts | default([]) }}"
      register: dhcpd_remove_absent_hosts_result
      loop_control:
        loop_var: dhcpd_host
        label: "{{ dhcpd_host.hostname }} / {{ dhcpd_host.mac }}"
      notify:
        - dhcpd restart

    - name: Search include files that already exists in dhcpd config dirs
      ansible.builtin.find:
        paths: "{{ dhcpd_include }}"
        patterns: "*.conf"
      when: dhcpd_delete_unmanaged | bool
      loop:
        - "{{ dhcpd_subnets_include_dir }}"
        - "{{ dhcpd_hosts_include_dir }}"
      loop_control:
        loop_var: dhcpd_include
      register: search_includes_result

    - name: Delete unmanaged include files
      ansible.builtin.file:
        path: "{{ dhcpd_include.path }}"
        state: absent
      when: >-
        dhcpd_delete_unmanaged | bool
        and dhcpd_include.path | default('') not in
          dhcpd_subnets
            | selectattr('state', 'equalto', 'present')
            | map(attribute='subnet')
            | map('regex_replace', '^', dhcpd_subnets_include_dir + "/")
            | map('regex_replace', '$', '.conf')
            | list
          + dhcpd_hosts
              | selectattr('state', 'equalto', 'present')
              | map(attribute='hostname')
              | map('regex_replace', '^', dhcpd_hosts_include_dir + "/")
              | map('regex_replace', '$', '.conf')
              | list
      loop: >-
        {{ search_includes_result.results
          | reject("skipped")
          | list
          | sum(attribute="files", start=[])
          | default([]) }}
      register: dhcpd_delete_unmanaged_result
      loop_control:
        loop_var: dhcpd_include
        label: "{{ dhcpd_include.path }}"
      notify:
        - dhcpd restart

    - name: Search include files remaining in dhcpd config dirs
      ansible.builtin.find:
        paths: "{{ dhcpd_include }}"
        patterns: "*.conf"
      loop:
        - "{{ dhcpd_subnets_include_dir }}"
        - "{{ dhcpd_hosts_include_dir }}"
      loop_control:
        loop_var: dhcpd_include
      register: search_includes_result

    - name: Setup fact with the final list of include files
      ansible.builtin.set_fact:
        dhcpd_include_files: >-
          {{ search_includes_result.results
            | map(attribute="files")
            | sum(start=[])
            | map(attribute="path")
            | list
            | default([]) }}

    - name: Create dhcpd main configuration file
      ansible.builtin.template:
        src: dhcpd.conf.j2
        dest: /etc/dhcp/dhcpd.conf
        owner: root
        group: root
        mode: 0644
        backup: no
      notify:
        - dhcpd restart
  tags:
    - role::dhcpd
    - role::dhcpd::configure
