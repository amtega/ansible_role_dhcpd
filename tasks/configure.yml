---
# Configuration tasks block

- block:

  - name: search static
    set_fact:
      dhcpd_external_static_addresses: >
        {{ hostvars[item]['dhcpd_static_addresses'] | list }}
    when: "'dhcpd_static_addresses' in hostvars[item]"
    with_items: "{{ groups['all'] }}"
    register: search_external_static_addresses_result

  - name: setup a fact with all static addresses
    set_fact:
      dhcpd_all_static_addresses: >
        {{ search_external_static_addresses_result.results
          | reject('skipped', 'defined')
          | map(attribute='ansible_facts')
          | map(attribute='dhcpd_external_static_addresses')
          | sum(none, [])
          | list + dhcpd_static_addresses }}

  - debug: var=dhcpd_all_static_addresses


  # - name: search static dhcp addreses config files defined in other hosts
  #   set_fact:
  #     files: >
  #       {{ hostvars[item]['dhcpd_static_addresses']
  #         | map(attribute='hostname')
  #         | map('regex_replace', '$', '.conf') | list }}
  #   when: "'dhcpd_static_addresses' in hostvars[item]"
  #   with_items: "{{ groups['all'] }}"
  #   register: search_external_files_result

  - name: setup a fact with all necessary static addresses include config files
    set_fact:
      dhcpd_static_include_files: >
        {{ dhcpd_all_static_addresses
          | map(attribute='hostname')
          | map('regex_replace', '$', '.conf') | list }}

  - debug: var=dhcpd_static_include_files

  - name: setup a fact with all necessary subnet include config files
    set_fact:
      dhcpd_subnet_include_files: >
        {{ dhcpd_subnets
          | map(attribute='subnet')
          | map('regex_replace', '$', '.conf')
          | list }}

  - debug: var=dhcpd_subnet_include_files

  - name: setup a fact with all necessary include files
    set_fact:
      dhcpd_include_files: >
        {{ dhcpd_static_include_files
          + dhcpd_subnet_include_files }}

  - name: search include files that exists
    find: paths="{{ dhcpd_include_files_dir }}" patterns="*.conf"
    register: search_includes_result

  - name: delete not necessary include files
    file: path={{ item.path }} state=absent
    when: "'{{ item.path | basename }}' not in dhcpd_include_files"
    with_items: "{{ search_includes_result.files }}"

  - name: configure dhcpd subnets
    template:
      src: subnet.template.j2
      dest: "{{ dhcpd_include_files_dir }}/{{ item.subnet }}.conf"
      owner: root
      group: root
      mode: 0644
      backup: yes
    with_items: "{{ dhcpd_subnets }}"
    register: configure_dhcpd_subnets_result
    when: "not dhcpd_client_only"

  - name: create main configuration file
    template:
      src: dhcpd.template.j2
      dest: /etc/dhcp/dhcpd.conf
      owner: root
      group: root
      mode: 0644
      backup: yes
    register: create_main_config_result

  - name: restart dhcpd service
    service: name=dhcpd state=restarted enabled=yes
    delegate_to: "{{ dhcpd_remote_server }}"
    when: >
      configure_dhcpd_subnets_result.changed
      or create_main_config_result.changed

  delegate_to: "{{ dhcpd_remote_server }}"
  tags: configure
